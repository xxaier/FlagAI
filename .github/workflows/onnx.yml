name: 'Export onnx'

permissions:
  id-token: write
  contents: write

on:
  workflow_dispatch:
  push:
    branches: ['master']
    paths:
      - 'onnx/Dockerfile'
      - 'onnx/export/**'
      - 'onnx/misc/**'
      - 'onnx/version.txt'
      - '.github/workflow/onnx.yml'
  pull_request:
    branches: ['master']
    paths:
      - 'onnx/Dockerfile'
      - 'onnx/export/**'
      - 'onnx/misc/**'
      - 'onnx/version.txt'
      - '.github/workflow/onnx.yml'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set Env
        run: |
          VERSION=$(cat onnx/version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          GIT_USER_REPO=${{github.repository}}
          GIT_USER=${GIT_USER_REPO%%/*}
          echo "GIT_USER=$GIT_USER" >> $GITHUB_ENV
          GIT_REPO=${GIT_USER_REPO#*/}
          echo "GIT_REPO=$GIT_REPO" >> $GITHUB_ENV
          RELEASE=AltCLIP-ONNX-$VERSION
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          TAG="AltCLIP-ONNX-$VERSION"
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            const {TAG} = process.env
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${TAG}`,
              sha: context.sha
            })

      - name: pre release
        run: |
          go install github.com/bboreham/github-release@publish-command;
          export PATH=$PATH:$(go env GOPATH)/bin;
          github-release release \
            --user ${{env.GIT_USER}} \
            --repo ${{env.GIT_REPO}} \
            --name ${{env.RELEASE}} \
            --tag ${{env.TAG}} \
            --description "$(cat onnx/changelog/${{env.VERSION}}.txt)" \
            --pre-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./onnx/
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{secrets.DOCKER_ORG}}/altclip-onnx:latest, ${{secrets.DOCKER_ORG}}/altclip-onnx:${{env.VERSION}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GIT=https://github.com/${{github.repository}}.git


  upload:
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model: [ AltCLIP-XLMR-L-m18,AltCLIP-XLMR-L-m9,AltCLIP-XLMR-L ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      -
        name: Set Env
        run: |
          VERSION=$(cat onnx/version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          GIT_USER_REPO=${{github.repository}}
          GIT_USER=${GIT_USER_REPO%%/*}
          echo "GIT_USER=$GIT_USER" >> $GITHUB_ENV
          GIT_REPO=${GIT_USER_REPO#*/}
          echo "GIT_REPO=$GIT_REPO" >> $GITHUB_ENV
          RELEASE=AltCLIP-ONNX-$VERSION
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

      - name: onnx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG: ${{secrets.DOCKER_ORG}}
          MODEL: ${{matrix.MODEL}}
        run: |
          go install github.com/bboreham/github-release@publish-command;
          export PATH=$PATH:$(go env GOPATH)/bin;
          cd ./onnx;
          ./export.sh ./export/tar.bz2.py;
          file=${MODEL}-${{env.VERSION}}.tar.bz2
          mv onnx/${MODEL}.tar.bz2 $file
          github-release upload \
            --user ${{env.GIT_USER}} \
            --repo ${{env.GIT_REPO}} \
            --name ${{env.RELEASE}} \
            --tag ${{env.TAG}} \
            --file $file

  release:
    runs-on: ubuntu-latest
    needs: upload
    steps:
      -
        name: Set Env
        run: |
          VERSION=$(cat onnx/version.txt)
          GIT_USER_REPO=${{github.repository}}
          GIT_USER=${GIT_USER_REPO%%/*}
          echo "GIT_USER=$GIT_USER" >> $GITHUB_ENV
          GIT_REPO=${GIT_USER_REPO#*/}
          echo "GIT_REPO=$GIT_REPO" >> $GITHUB_ENV
          RELEASE=AltCLIP-ONNX-$VERSION
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
      - name: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/bboreham/github-release@publish-command;
          export PATH=$PATH:$(go env GOPATH)/bin;
          github-release publish \
          --user ${{env.GIT_USER}} \
          --repo ${{env.GIT_REPO}} \
          --tag ${{env.TAG}} \
          --name ${{env.RELEASE}}



